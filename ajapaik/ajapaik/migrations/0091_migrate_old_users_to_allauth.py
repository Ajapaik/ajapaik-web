# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-19 15:21
from __future__ import unicode_literals

from django.db import migrations, transaction
from django.db.models import Q
from django.db.utils import IntegrityError


def migrate_users(apps, schema_editor):
    # Allauth application models.
    SocialAccount = apps.get_model('socialaccount', 'SocialAccount')
    EmailAddress = apps.get_model('account', 'EmailAddress')
    # Ajapaik models.
    Profile = apps.get_model('ajapaik', 'Profile')
    # Django models.
    User = apps.get_model('auth', 'User')

    print('')

    ############################################################################
    ### Moving contribution data from duplicating social users to email
    ### registered user.
    ############################################################################
    # Users registered with email. Users which have email but haven't google or
    # Facebook id.
    email_users = User.objects \
        .filter(
            Q(email__ne='')
            & (Q(profile__google_plus_id__isnull=True) 
               | Q(profile__google_plus_id=None)
               | Q(profile__google_plus_id=''))
            & (Q(profile__fb_id__isnull=True)
               | Q(profile__fb_id='')
               | Q(profile__fb_email=None))
        ) \
        .select_related('registrationprofile')

    for email_user in email_users:
        verified = True
        if hasattr(email_user, 'registrationprofile'):
            # If we have instance of RegistrationProfile model. We use it to
            # know if email was activated.
            verified = email_user.registrationprofile.activated
        try:
            with transaction.atomic():
                EmailAddress.objects.create(
                    email=email_user.email,
                    verified=verified,
                    primary=True,
                    user=email_user
                )
        except IntegrityError:
            # We have already such email. Skipping ...
            print('We have already {} email. Skipping ...'.format(email_user.email))


    ############################################################################
    ### Creating Facebook social acconts.
    ############################################################################
    facebook_profiles = Profile.objects \
        .filter(fb_id__isnull=False, fb_id__ne='') \
        .prefetch_related('user')

    for profile in facebook_profiles:
        try:
            with transaction.atomic():
                SocialAccount.objects.create(
                    provider='facebook',
                    uid=profile.fb_id,
                    date_joined=profile.user.date_joined,
                    last_login=profile.user.last_login,
                    user=profile.user,
                    extra_data={}
                )
        except IntegrityError:
            # We have already such facebook account. Skipping ...
            print('We have already {} facebook account. Skipping ...'.format(profile.fb_id))
        if not profile.user.email and profile.fb_email:
            profile.user.email = profile.fb_email
        if not profile.user.first_name and profile.first_name:
            profile.user.first_name = profile.first_name
        if not profile.user.last_name and profile.last_name:
            profile.user.last_name = profile.last_name


    ############################################################################
    ### Creating Google social acconts.
    ############################################################################
    google_profiles = Profile.objects \
        .filter(google_plus_id__isnull=False, google_plus_id__ne='') \
        .prefetch_related('user')

    for profile in google_profiles:
        try:
            with transaction.atomic():
                SocialAccount.objects.create(
                    provider='google',
                    uid=profile.google_plus_id,
                    date_joined=profile.user.date_joined,
                    last_login=profile.user.last_login,
                    user=profile.user,
                    extra_data={}
                )
        except IntegrityError:
            # We have already such google account. Skipping ...
            print('We have already {} google account. Skipping ...'.format(profile.google_plus_id))
        if not profile.user.email and profile.google_plus_email:
            profile.user.email = profile.google_plus_email
        if not profile.user.first_name and profile.first_name:
            profile.user.first_name = profile.first_name
        if not profile.user.last_name and profile.last_name:
            profile.user.last_name = profile.last_name


class Migration(migrations.Migration):

    dependencies = [
        ('ajapaik', '0090_auto_20190306_1556'),
        ('registration', '0004_supervisedregistrationprofile'),
        ('socialaccount', '0003_extra_data_default_dict'),
        ('account', '0002_email_max_length'),
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.RunPython(migrate_users),
]
