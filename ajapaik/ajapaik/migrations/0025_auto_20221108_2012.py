# Generated by Django 3.2.14 on 2022-11-08 18:12

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ajapaik', '0024_auto_20220612_2058'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlbumSearchIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('text_et', models.TextField(blank=True, null=True)),
                ('text_lv', models.TextField(blank=True, null=True)),
                ('text_lt', models.TextField(blank=True, null=True)),
                ('text_en', models.TextField(blank=True, null=True)),
                ('text_ru', models.TextField(blank=True, null=True)),
                ('text_fi', models.TextField(blank=True, null=True)),
                ('text_sv', models.TextField(blank=True, null=True)),
                ('text_nl', models.TextField(blank=True, null=True)),
                ('text_de', models.TextField(blank=True, null=True)),
                ('text_no', models.TextField(blank=True, null=True)),
                ('vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_de', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_en', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_et', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_fi', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_ru', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_lv', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_lt', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_nl', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_no', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('vector_sv', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_de_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_en_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_et_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_fi_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_ru_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_lv_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_lt_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_nl_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_no_idx',
        ),
        migrations.RemoveIndex(
            model_name='photosearchindex',
            name='text_search_vector_sv_idx',
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector'], name='photosearchindex_vector_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_de'], name='photosearchindex_vector_de_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_en'], name='photosearchindex_vector_en_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_et'], name='photosearchindex_vector_et_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_fi'], name='photosearchindex_vector_fi_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_ru'], name='photosearchindex_vector_ru_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_lv'], name='photosearchindex_vector_lv_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_lt'], name='photosearchindex_vector_lt_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_nl'], name='photosearchindex_vector_nl_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_no'], name='photosearchindex_vector_no_idx'),
        ),
        migrations.AddIndex(
            model_name='photosearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_sv'], name='photosearchindex_vector_sv_idx'),
        ),
        migrations.AddField(
            model_name='albumsearchindex',
            name='photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ajapaik.album'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector'], name='albumsearchindex_vector_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_de'], name='albumsearchindex_vector_de_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_en'], name='albumsearchindex_vector_en_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_et'], name='albumsearchindex_vector_et_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_fi'], name='albumsearchindex_vector_fi_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_ru'], name='albumsearchindex_vector_ru_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_lv'], name='albumsearchindex_vector_lv_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_lt'], name='albumsearchindex_vector_lt_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_nl'], name='albumsearchindex_vector_nl_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_no'], name='albumsearchindex_vector_no_idx'),
        ),
        migrations.AddIndex(
            model_name='albumsearchindex',
            index=django.contrib.postgres.indexes.GinIndex(fields=['vector_sv'], name='albumsearchindex_vector_sv_idx'),
        ),
    ]
