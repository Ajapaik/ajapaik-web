name: Python application

on: [ push ]

jobs:
  build:

    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres_test
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install apt dependencies
        run: sudo apt-get update && sudo apt-get install python3-gdal libgdal-dev proj-bin libproj-dev gdal-bin python3-setuptools
      - uses: actions/checkout@v2
      - name: Install dependencies
        env:
          CPLUS_INCLUDE_PATH: /usr/include/gdal/
          C_INCLUDE_PATH: /usr/include/gdal/
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements-test.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python3 -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Generate coverage report
        env:
          POSTGRES_DATABASE_HOST: localhost
          POSTGRES_DATABASE_DATABASE: postgres_test
          POSTGRES_DATABASE_USER: postgres
          POSTGRES_DATABASE_PASSWORD: postgres
        run: |
          python3 -m pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
